# HBase数据验证系统 - 完整Kubernetes部署配置
# 使用方法: kubectl apply -f hbase-validator-deploy.yaml

---
# Namespace (可选 - 如果需要独立命名空间)
apiVersion: v1
kind: Namespace
metadata:
  name: hbase-validator
  labels:
    name: hbase-validator
    app: hbase-validator

---
# ConfigMap - 应用配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: hbase-validator-config
  namespace: hbase-validator
  labels:
    app: hbase-validator
    component: config
data:
  config.yaml: |
    # HBase数据迁移验证系统配置文件
    
    # 源端HBase配置 - 请修改为实际配置
    source:
      host: "10.0.0.100"  # 替换为实际源端HBase地址
      port: 9090
      table_name: "hope_saas_oms:oms_order_info"
      timeout: 30000
    
    # 目标端HBase配置 - 请修改为实际配置
    target:
      host: "10.0.0.101"  # 替换为实际目标端HBase地址
      port: 9090
      table_name: "hope_saas_oms:oms_order_info"
      timeout: 30000
    
    # 验证配置
    validation:
      max_rows: 10000
      max_workers: 10
      batch_size: 100
      timeout: 300
      verbose: true
      sample_rate: 1.0
    
    # 报告配置
    report:
      output_dir: "./reports"
      formats: ["json", "excel"]
      include_details: true
      max_detail_records: 1000
    
    # 日志配置
    logging:
      level: "INFO"
      file: "hbase_validation.log"
      format: "%(asctime)s - %(levelname)s - %(message)s"
    
    # UI配置
    ui:
      title: "HBase数据迁移验证系统"
      default_display_rows: 100
      refresh_interval: 5

---
# Secret - 敏感信息 (可选)
apiVersion: v1
kind: Secret
metadata:
  name: hbase-validator-secret
  namespace: hbase-validator
  labels:
    app: hbase-validator
    component: secret
type: Opaque
data:
  # 如果需要存储敏感信息，请使用base64编码
  # 例如: database-password: <base64-encoded-password>

---
# Deployment - 主应用部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hbase-validator
  namespace: hbase-validator
  labels:
    app: hbase-validator
    component: web
    version: v1.0.0
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "HBase数据迁移验证系统"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: hbase-validator
      component: web
  template:
    metadata:
      labels:
        app: hbase-validator
        component: web
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "false"  # 如果不需要Prometheus监控，设为false
        prometheus.io/port: "8501"
        prometheus.io/path: "/metrics"
    spec:
      # 安全上下文
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      # 容器配置
      containers:
      - name: hbase-validator
        image: ccr.ccs.tencentyun.com/your-namespace/hbase-validator:latest
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 8501
          protocol: TCP
        
        # 环境变量
        env:
        - name: STREAMLIT_SERVER_PORT
          value: "8501"
        - name: STREAMLIT_SERVER_ADDRESS
          value: "0.0.0.0"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: TZ
          value: "Asia/Shanghai"
        
        # 资源限制
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 2Gi
        
        # 存储挂载
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.yaml
          subPath: config.yaml
          readOnly: true
        - name: reports-volume
          mountPath: /app/reports
        - name: logs-volume
          mountPath: /app/logs
        
        # 健康检查
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # 启动探针 (防止慢启动被误杀)
        startupProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        # 安全上下文
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      # 存储卷
      volumes:
      - name: config-volume
        configMap:
          name: hbase-validator-config
          defaultMode: 0644
      - name: reports-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: logs-volume
        emptyDir:
          sizeLimit: 1Gi
      
      # Pod配置
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      
      # 节点调度 (可选)
      # nodeSelector:
      #   kubernetes.io/os: linux
      # affinity:
      #   podAntiAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - weight: 100
      #       podAffinityTerm:
      #         labelSelector:
      #           matchExpressions:
      #           - key: app
      #             operator: In
      #             values:
      #             - hbase-validator
      #         topologyKey: kubernetes.io/hostname

---
# Service - 服务暴露
apiVersion: v1
kind: Service
metadata:
  name: hbase-validator-service
  namespace: hbase-validator
  labels:
    app: hbase-validator
    component: web
  annotations:
    service.beta.kubernetes.io/tencentcloud-load-balancer-backends-label: "app=hbase-validator"
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http
    port: 80
    targetPort: 8501
    protocol: TCP
  selector:
    app: hbase-validator
    component: web

---
# Ingress - 外部访问 (腾讯云TKE配置)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hbase-validator-ingress
  namespace: hbase-validator
  labels:
    app: hbase-validator
    component: ingress
  annotations:
    # 腾讯云TKE Ingress注解
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    
    # 腾讯云特有注解
    ingress.cloud.tencent.com/direct-access: "false"
    
    # 跨域支持 (如果需要)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  rules:
  - host: hbase-validator.your-domain.com  # 请替换为您的实际域名
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hbase-validator-service
            port:
              number: 80
  
  # TLS配置 (可选 - 如果有HTTPS证书)
  # tls:
  # - hosts:
  #   - hbase-validator.your-domain.com
  #   secretName: hbase-validator-tls-secret

---
# HorizontalPodAutoscaler - 自动扩缩容 (可选)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hbase-validator-hpa
  namespace: hbase-validator
  labels:
    app: hbase-validator
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hbase-validator
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min

---
# PodDisruptionBudget - Pod中断预算 (可选)
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hbase-validator-pdb
  namespace: hbase-validator
  labels:
    app: hbase-validator
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: hbase-validator
      component: web
